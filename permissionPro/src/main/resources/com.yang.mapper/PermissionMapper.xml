<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.mapper.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.yang.domain.Permission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="resource" jdbcType="VARCHAR" property="resource" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yang.domain.Permission">
    insert into permission (id, name, resource
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{resource,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yang.domain.Permission">
    update permission
    set name = #{name,jdbcType=VARCHAR},
      resource = #{resource,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, resource
    from permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, resource
    from permission
  </select>
  <!--根据role_id获取权限列表-->
    <select id="selectAllByRoleId" resultType="com.yang.domain.Permission">
        select * from `permission` where id in (select permission_id from `role_permission_rel` where role_id = ${id})
    </select>
</mapper>